Применяется ассиметричное шифрование (пароль - отзыв).
Открытый ключ - на удалённом сервере, закрытый - у нас.

ssh-keygen -t rsa -b 2048 -C "TimeWeb Machine" -f timeweb
 Создаём пару ключей типа rsa (алгоритм шифрования) с размером ключа 2 КБ.
-C - комментарий, -f - имя файла
 
Чтобы зайти на удалённый сервер:
ssh -i timeweb root@194.187.122.133

Создаём пользователя:
adduser vladi

Нужно дать пользователю права администратора:
usermod -aG sudo vladi
Этой командой мы добавили пользователя vladi в группу sudo.
Только пользователи этой группы могут вызывать команду sudo.

Переключаемся с пользователя root на пользователя vladi (swap user):
su - vladi

Теперь мы можем заходить сразу под пользователем vladi:
ssh -i timeweb vladi@194.187.122.133

Но когда мы заходим под vladi, нас просят ввести пароль (когда заходим под root, пароль не запрашивается, так как мы логинимся под root с помощью ssh-ключа).
Логин по паролю гораздо менее надёжен, чем логин по ключу (пароль ~8-10 символов, а ключ - 2 КБ).

Сделаем так, чтобы под vladi можно было логиниться с помощью ключа:
ssh -i timeweb vladi@194.187.122.133

Переходим в домашнюю папку:
cd ~

Создадим папку ssh и выставим на неё права:
mkdir -p .ssh
chmod 700 .shh
Mod 700 означает, что текущий пользователь может делать с данной папкой всё, а остальные - не могут.
Если мы не выставим эти права, ssh не даст нам работать с ключом ввиду соображений безопасности.

Запишем в эту папку наш открытый ключ:
echo ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCfV5zA2+4OZYAClEGQ28EYlJT9ss1160ru0hWtmcUD89U92l601NWgN6j7VpI5TxEKUg8HA72JXdmvgewZ4IgMGTsOHoFEMogmk7t9qMctfUVipf9aHyLdgrf92AtpujLUObhj+PprBCoDHTaZ6kjthO0Ihq8nOQ2OW00ahL8cg/ob6uhYZpBmFaSv4AzUUiUn9N44R1JxFY8bGQeczoqiErXQNZrdKRp/PvJCeV5B3Z+0ZscaUPVdMMdKgnYo5SlP3wH3EV4NT+c8DCnSelfcU7poEE+wpN4gKnuqUTemFMWowttkQzz03qY3qF6rnSfvhhC2LImIyuXQWgUs8Xan TimeWeb Machine >> ~/.ssh/authorized_keys

Выходим и пробуем зайти под vladi.
Нас просят ввести пароль от ключа, а не пароль от пользователя, чего мы и добивались.

Но мы до сих пор можем зайти на машину под пользователем vladi по логину и паролю. Достаточно просто забыть указать файл с закрытым ключом в качестве аргумента. Это можно исправить.

Зайдём на сервер и отредактируем файл конфигурации SSH.
Откроем файл конфигурации SSH:
sudo nano /etc/ssh/sshd_config

Стрелкой вниз доматываем до строки с PasswordAuthentication и вместо yes пишем no.

Нажмаем Ctrl + O для сохранения, Ctrl + X для выхода.

После этого перечитываем конфигурацию сервера sshd (сервер ssh daemon):
sudo systemctl reload sshd.service

Теперь всё работает как надо - без указания ключа в качестве аргумента под vladi мы не залогинимся.


В завершении.
Довольно неудобно каждый раз добавлять путь к ключу при подключении к серверу. Да и указывать его в rsync тоже немного неприятно. Исправим это.

На локальной машине создаём папку ~/.ssh и задаём на неё права:
$ mkdir -p ~/.ssh
$ chmod 700 ~/.ssh

Создаём в папке ~/.ssh файл с именем config:
$ touch ~/.ssh/config && chmod 600 ~/.ssh/config

Копируем приватный и публичный ключи в папку ~/.ssh/:
$ cp -fv timeweb timeweb.pub ~/.ssh/
$ chmod 600 ~/.ssh/timeweb*

Отредактируем файл ~/.ssh/config через текстовый редактор, написав следующие строки:
Host <ip_address_of_your_machine>
User <your_remote_system_user_name>
IdentityFile ~/.ssh/timeweb

Готово!
